#version 450

uniform int function_id = -1;

layout(std430, binding = 0) buffer program_in {
    ivec4 data[];
} input_buffer;

layout(std430, binding = 1) buffer program_out {
    ivec4 data[];
} output_buffer;

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

#define PI 3.1415926538

void main() {
    uint idx = gl_GlobalInvocationID.x;

    switch (function_id) {
        case 0:
            output_buffer.data[idx / 4][idx % 4] = int(input_buffer.data[0][0] + idx);
            break;
        case 1:
            output_buffer.data[idx / 4][idx % 4] = int(10 * sin(PI / 10 * input_buffer.data[idx / 4][idx % 4]));
            break;
        default:
            break;
    }
}
